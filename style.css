/* --- Palette: keep exact colors --- */
:root{
  --bg:#0e1b10;
  --text:#f8fff8;
  --accent:#aaffaa;
  --panel:#1d2b1d;
  --line:#333;
  --button:#2f4f2f;
  --muted:#444;
  --hover:#666;
  --ring:#00cc00;
}

*{box-sizing:border-box}

body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background-color: var(--bg);
  color: var(--text);
}

.container {
  max-width: 960px;
  margin: 0 auto;
  padding: 40px 20px;
  text-align: center;
}

h1 { color: var(--accent); margin-top: 0; }

.input-group {
  display: grid;
  gap: 10px;
  margin-bottom: 24px;
  justify-items: center;
}

input[type="text"] {
  padding: 10px 12px;
  width: 100%;
  max-width: 640px;
  border-radius: 6px;
  border: 1px solid var(--line);
  background-color: var(--panel);
  color: #fff;
}

.actions{
  display: grid;
  grid-auto-flow: column;
  gap: 8px;
}

.btn {
  padding: 10px 16px;
  background-color: var(--button);
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 600;
  transition: transform .05s ease, opacity .2s ease;
}
.btn.sm{ padding: 8px 12px; }
.btn:hover { transform: translateY(-1px); }
.btn:disabled { background-color: #444; cursor: not-allowed; transform: none; }

/* --- Toggles (checkbox sliders) --- */
.toggles{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: 10px;
  margin: 6px auto 28px;
  max-width: 960px;
}
.toggle{
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  gap: 10px;
  padding: 8px 10px;
  background: var(--panel);
  border: 1px solid var(--line);
  border-radius: 8px;
}
.state{
  font-size: 12.5px;
  line-height: 1;
  white-space: nowrap;
  opacity: .55;
}
.switch{
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.switch input{
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: pointer;
}
.track{
  width: 56px;
  height: 28px;
  background: var(--muted);
  border-radius: 999px;
  position: relative;
  transition: background-color .2s ease;
  border: 1px solid var(--line);
}
.thumb{
  position: absolute;
  top: 2px;
  left: 2px;
  width: 22px;
  height: 22px;
  border-radius: 50%;
  background: #0b150c;
  box-shadow: 0 0 0 2px #0b150c, 0 0 8px #111;
  transition: left .2s ease;
}

/* Checked state visuals (no JS needed) */
.switch input:checked + .track{ background: var(--button); }
.switch input:checked + .track .thumb{ left: 32px; }

/* Dim/brighten the side labels based on checked */
.toggle .state-off{ text-align: right; }
.toggle .state-on{ text-align: left; }
.toggle .switch input:not(:checked) ~ .state-on,
.toggle .switch input:checked ~ .state-off{ opacity: .35; }

/* Make that sibling relation work:
   reflow DOM inside .toggle to allow label shading via CSS only */
.toggle{
  position: relative;
}
.toggle > .switch{ order: 2; }
.toggle > .state-on{ order: 3; }
.toggle > .state-off{ order: 1; }

/* Card grid (unchanged behavior) */
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 15px;
  justify-content: center;
}
.card img {
  width: 100%;
  border-radius: 5px;
  box-shadow: 0 0 10px #111;
}

/* Spinner (keep exactly same look & motion) */
.hidden { display: none; }
.spinner-wrapper {
  position: relative;
  width: 80px;
  height: 80px;
  margin: 30px auto;
}
.spinner-ring {
  position: absolute;
  width: 80px;
  height: 80px;
  border: 4px solid transparent;
  border-top: 4px solid var(--ring);
  border-radius: 50%;
  animation: rotate 1s linear infinite;
}
.spinner-icon {
  position: absolute;
  top: 22px;
  left: 22px;
  width: 36px;
  height: 36px;
  object-fit: contain;
  z-index: 10;
}
@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
